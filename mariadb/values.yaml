# ---------------------------------------------------------------------------------------------------------
# base configuration
nameOverride: "mediocre-db-mariadb"
fullnameOverride: "mediocre-db-mariadb"
role: "database"
namespace: "platform"

# ---------------------------------------------------------------------------------------------------------
# serviceaccount
serviceAccount:
  name: ""
  create: true
  automount: true

# ---------------------------------------------------------------------------------------------------------
# configmap
configMap:
  data:
    MARIADB_ROOT_PASSWORD: "Hell0D4tabase!"

# ---------------------------------------------------------------------------------------------------------
# role
Role:
  rules:
    - apiGroups: [""]
      resources: ["configmaps","secrets"]
      verbs: ["list","get"]

# ---------------------------------------------------------------------------------------------------------
# statefulset
StatefulSet:
  podManagementPolicy: "OrderedReady"
  containers:
    mariadb:
      repository: "487835535578.dkr.ecr.ap-southeast-1.amazonaws.com/system-devops-ecr-mariadb"
      tag: "latest"
      imagePullPolicy: "Always"
      resources:
        requests:
          memory: "500M"
          cpu: 0.5
        limits:
          memory: "500"
          cpu: 1.8
      securityContext:
        runAsUser: 1000
      volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-data    
  volumes:
    - name: db-data
      hostPath:
        path: /opt/kube/mariadb
        type: Directory
  podSecurityContext:
    fsGroup: 1000
  imagePullSecrets:
    - name: mediocre-ecr-login
  tolerations:
    - key: "platform/role"
      operator: "Equal"
      value: "database"
      effect: "NoExecute"
  replicas: 1
  selector:
    matchLabels:
      platform/role: database
  
# ---------------------------------------------------------------------------------------------------------
# service (cluster-ip)
Service:
  type: ClusterIP
  ports:
    - targetPort: 3306
      port: 3306
  clusterIP: None
  selector:
    platform/role: database

# ---------------------------------------------------------------------------------------------------------
# service (node)
ServiceNode:
  type: NodePort
  ports:
    - targetPort: 3306
      port: 3306
      nodePort: 30306
  selector:
    platform/role: database

# ---------------------------------------------------------------------------------------------------------
# storageclass
StorageClass:
  create: false

# ---------------------------------------------------------------------------------------------------------
# persistentvolumeclaim
PersistentVolumeClaim:
  create: false
  storage: 4Gi
